-- git config credential.helper store

-- sudo apt-get install python-pip python-dev build-essential --- if we get pip issues while installing pyspark

1) Install p7zip-full i.e sudo apt install p7zip-full 
3) Decompress initrd.lz with "7z e -so ./initrd.lz | cpio -id"    ---  it decompresses initrd.lz into usr, bin,..... folders

To compress it again go to the init subdirectory and execute:
4) find | cpio -o -H newc > ../newinitrd
5) go up one directory
6) 7z a -m0=lzma:a=1 initrd-mod.lz newinitrd

sudo xorriso -as mkisofs -isohybrid-mbr isolinux/isohdpfx.bin -c isolinux/boot.cat -b isolinux/isolinux.bin -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -e boot/grub/efi.img -no-emul-boot -isohybrid-gpt-basdat -o ../custom-ubuntu-http.iso .


.deb package can be installed offline by bundeling all the dependencies and copying it to target system. But it needs Synaptic package manager to be installed on the target system. if snaptic package manager is not installed, the package can only be installed in presence of network. Else not possible


---------------------------------------------------------------------
.deb package creation
---------------------------------------------------------------------

mkdir -p Debian/sample
cd Debian/sample

#create debian package
dh_make --native --single --packagename sampleDebian-1.0.0     # i.e. <packageName>-<version>

#build first empty package
dpkg-buildpackage -uc -us                #we will get package.deb file after building

#see contents of generated .deb file
dpkg -c ../sampleDebian-1.0.0.deb

#install the empty package on system
sudo dpkg -i ../sampleDebian-1.0.0.deb

#to check if package is installed correctly
dpkg -l | grep sampleDeb             #'ii' in first column means package is properly installed

#see the contents of installed package
dpkg -L sample          #dpkg -L only works with installed package

#Adding files and updating the changelog. Create folder files/ and use it to mirror Linux filesystem structue. and put script of files inside files/usr/bin/
mkdir -p files/usr/bin
chmod +x files/usr/bin/

#create "sudo gedit debian/install" file to list directories to inlclude for dpkg-buildpackage to know which packages to build
files/usr/* usr     #everything in files/usr/ folder will be copied to /usr/ on the target file system when the package is installed

#change changelog file (Debian/changelog)
dch -im 
cat Debian/changelog

#rebuild and reinstall a package
dpkg-buildpackage -uc -us
sudo dpkg -i ../sampleDebian-1.0.0.deb 
dpkg -l | grep sampleDeb
